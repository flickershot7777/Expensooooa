import{a as h,b as v}from"./chunk-KOAHGTDB.js";import{a as i,b as u,c as E,e as a,fa as f,g as o,k as g,o as c,r as x}from"./chunk-ZQFCUUPU.js";var d,S=E(()=>{"use strict";g();f();v();d=class l{constructor(e){this.authService=e;this.loadAllExpenses(),this.authService.currentUser$.subscribe(()=>{this.updateUserExpenses()})}allExpenses=[];expensesSubject=new o([]);expenses$=this.expensesSubject.asObservable();STORAGE_KEY="user_expenses";loadAllExpenses(){try{let e=localStorage.getItem(this.STORAGE_KEY);e?this.allExpenses=JSON.parse(e):this.allExpenses=[],this.updateUserExpenses()}catch(e){console.error("Error loading expenses:",e),this.allExpenses=[],this.expensesSubject.next([])}}saveAllExpenses(){try{localStorage.setItem(this.STORAGE_KEY,JSON.stringify(this.allExpenses))}catch(e){console.error("Error saving expenses:",e)}}updateUserExpenses(){let e=this.authService.getCurrentUser();if(e){let s=this.allExpenses.filter(t=>t.userId===e.id);this.expensesSubject.next(s)}else this.expensesSubject.next([])}addExpense(e){return new a(s=>{let t=this.authService.getCurrentUser();if(!t){s.error("User not authenticated");return}let r=u(i({},e),{id:this.generateId(),userId:t.id});this.allExpenses.push(r),this.saveAllExpenses(),this.updateUserExpenses(),s.next(r.id),s.complete()})}getExpenses(){return this.expenses$}deleteExpense(e){return new a(s=>{let t=this.authService.getCurrentUser();if(!t){s.next(!1),s.complete();return}let r=this.allExpenses.length;this.allExpenses=this.allExpenses.filter(n=>!(n.id===e&&n.userId===t.id)),this.allExpenses.length<r?(this.saveAllExpenses(),this.updateUserExpenses(),s.next(!0)):s.next(!1),s.complete()})}updateExpense(e,s){return new a(t=>{let r=this.authService.getCurrentUser();if(!r){t.next(!1),t.complete();return}let n=this.allExpenses.findIndex(p=>p.id===e&&p.userId===r.id);n!==-1?(this.allExpenses[n]=i(i({},this.allExpenses[n]),s),this.saveAllExpenses(),this.updateUserExpenses(),t.next(!0)):t.next(!1),t.complete()})}getTotalAmount(){let e=this.authService.getCurrentUser();return e?this.allExpenses.filter(s=>s.userId===e.id).reduce((s,t)=>s+t.amount,0):0}generateId(){return Date.now().toString()+Math.random().toString(36).substr(2,9)}static \u0275fac=function(s){return new(s||l)(x(h))};static \u0275prov=c({token:l,factory:l.\u0275fac,providedIn:"root"})}});export{d as a,S as b};
